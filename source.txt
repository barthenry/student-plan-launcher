var table = $("#ctl00_ContentPlaceHolder1_WorkingTimeSheetOverTimeControl_TimeSheetGrid_ctl00");
var rows = table.find("> tbody > tr");
var rowsNumber = rows.length;

var totalWorkTimeInMinutes = 0;
var plannedWorkTimeInMinutes = 0;

$.each(rows.get().reverse(), function(index, tr){
	var enterTime = $(this).find("td:nth-child(3)").text().trim();
	var workTime = $(this).find("td:nth-child(5)").text().trim();
	var plannedWorkTime = $(this).find("td:nth-child(6)").text().trim();
	
	
	if(workTime){
		totalWorkTimeInMinutes += timeStringToMinutes(workTime);
		plannedWorkTimeInMinutes += timeStringToMinutes(plannedWorkTime);
		
		var difference = totalWorkTimeInMinutes - plannedWorkTimeInMinutes;
		var differenceString = minutesToTimeString(Math.abs(difference));
		
		var columnToChange = $(this).find("td:nth-child(7)");
		
		columnToChange.text(differenceString);
		columnToChange.css('fontWeight', 'bold');
		
		if(difference < 0){
			columnToChange.css('color', 'red');
		} else {
			columnToChange.css('color', 'green');
		}
		
	} else
		if(index + 1 === rowsNumber && enterTime){
			plannedWorkTimeInMinutes += timeStringToMinutes(plannedWorkTime);
			var columnToChange = $(this).find("td:nth-child(4)");
			
			var difference = plannedWorkTimeInMinutes - totalWorkTimeInMinutes;
			var proposedWorkEnd = calculateWorkEnd(enterTime, difference);
			
			columnToChange.text(proposedWorkEnd);
			columnToChange.css('fontWeight', 'bold');
			columnToChange.css('color', 'blue');
		}
});



function timeStringToMinutes(timeInHours){
	var timeArray = timeInHours.split(":");
	return parseInt(timeArray[0]) * 60 + parseInt(timeArray[1]);
}

function minutesToTimeString(minutes){
	var hour = Math.floor(minutes / 60);
	var minutes = minutes % 60;
	
	return hour + ":" + minutes;
}

function calculateWorkEnd(workStart, minutesToAdd){
	var workStartArray = workStart.split(":");
	var workStartHour = parseInt(workStartArray[0]);
	var workStartMinute = parseInt(workStartArray[1]);
	console.log(workStartArray);
	workStartHour += Math.floor(minutesToAdd / 60);
	workStartMinute += minutesToAdd % 60;
	
	if(workStartMinute > 60){
		workStartHour++;
		workStartMinute -= 60;
	}
	
	if(workStartMinute < 0){
		workStartHour--;
		workStartMinute += 60;
	}
	
	return workStartHour + ":" + workStartMinute;
}
